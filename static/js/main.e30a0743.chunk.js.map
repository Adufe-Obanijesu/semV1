{"version":3,"sources":["db.js","App.js","reportWebVitals.js","index.js"],"names":["db","name","meterNumber","accessNumber","toast","configure","App","errorNotification","message","error","position","POSITION","BOTTOM_RIGHT","useState","phoneNumber","setPhoneNumber","amount","setAmount","email","setEmail","setName","setMeterNumber","username","setUsername","modal","setModal","creditModal","setCreditModal","setAccessNumber","sendMessage","amountOfUnit","axios","post","then","res","console","log","success","catch","err","componentProps","reference","Date","getTime","publicKey","text","onSuccess","onClose","id","className","Modal","isOpen","toggle","Container","ModalHeader","size","color","loading","onSubmit","e","preventDefault","userDetails","find","user","undefined","initiatePayment","type","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e30a0743.chunk.js","sourcesContent":["const db = [\r\n\t{\r\n\t\tname: \"Adufe Obanijesu\",\r\n\t\tmeterNumber: \"234\",\r\n\t\taccessNumber: \"08146917054\"\r\n\t},\r\n\t{\r\n\t\tname: \"Akinboyede Joseph\",\r\n\t\tmeterNumber: \"123\",\r\n\t\taccessNumber: \"08035553294\"\r\n\t}\r\n]\r\n\r\nexport default db;","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PaystackButton } from 'react-paystack';\nimport axios from 'axios';\nimport { ClipLoader } from \"react-spinners\";\nimport { Modal, ModalHeader, Container } from 'reactstrap'\n\n\n// Importing CSS files\nimport \"./App.css\";\n\n// Importing database\nimport db from './db.js';\n\ntoast.configure()\nconst App = () => {\n\n  const successNotification = () => {\n        toast.success(\"Transaction successful. Crediting your meter...\", {position: toast.POSITION.BOTTOM_RIGHT});\n    }\n\n    const errorNotification = (message) => {\n        toast.error(message, {position: toast.POSITION.BOTTOM_RIGHT});\n    }\n\n  const [ phoneNumber, setPhoneNumber ] = useState(\"\");\n  const [ amount, setAmount ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ name, setName ] = useState(\"\");\n  const [ meterNumber, setMeterNumber ] = useState(\"\");\n  const [ username, setUsername ] = useState(\"\");\n  const [ modal, setModal ] = useState(false);\n  const [ creditModal, setCreditModal ] = useState(false);\n  const [ accessNumber, setAccessNumber ] = useState(\"\");\n\n  // Setting price per unit\n  const pricePerUnit = 10;\n\n  const initiatePayment = e => {\n    console.log(\"it got here\")\n    e.preventDefault();\n\n    if(name === \"\" || email === \"\" || meterNumber === \"\" || amount === \"\" || phoneNumber === \"\") {\n      errorNotification(\"Error paying, please ensure that all the fields are filled\");\n      return 0;\n    }\n\n    const userDetails = db.find(user => {\n      return user.meterNumber === meterNumber\n    })\n\n    if(userDetails === undefined) {\n      errorNotification(\"Meter not recognized\");\n      return 0;\n    }\n\n    setUsername(userDetails.name);\n    setAccessNumber(userDetails.accessNumber);\n    setModal(true);\n\n    \n  }\n\n  const sendMessage = () => {\n    setCreditModal(true);\n    const amountOfUnit = amount/pricePerUnit;\n    axios.post(\"https://www.bulksmsnigeria.com/api/v1/sms/create\", {\n    \"api_token\": \"pgMmXdOsvrwJTEl1YJHDOU5a26xvvnZuimRi4cAp8dXLY4YMp7m9mH3Tx2ah\",\n    \"to\": accessNumber,\n    \"from\": \"Pappijoe\",\n    \"body\": amountOfUnit,\n    \"dnd\": \"2\"\n}\n  ).then(res => {\n    console.log(res);\n    setCreditModal(false);\n    setModal(false);\n    successNotification();\n    console.log(amountOfUnit);\n  })\n  .catch(err=> {\n    console.log(err)\n    setCreditModal(false);\n    setModal(false);\n    errorNotification(\"Error crediting your meter. Please try again later.\")\n  })\n  \n\n  }\n\n   // you can call this function anything\n  const handlePaystackCloseAction = () => {\n    // implementation for  whatever you want to do when the Paystack dialog closed.\n    console.log('closed')\n  }\n\n  const componentProps = {\n      reference: (new Date()).getTime(),\n      email,\n      amount: amount * 100,\n      publicKey: 'pk_test_d9602281402b5d4684870021e5a9814190f03108',\n        text: 'Pay',\n        onSuccess: (reference) => sendMessage(reference),\n        onClose: handlePaystackCloseAction,\n    };\n\n  return (\n    <div id=\"signup\">\n      <section className=\"bg-white shadow\">\n        <h3 className=\"text-center mb-4\">Smart Energy Meter</h3>\n        <Modal isOpen={ modal } toggle={ () => setModal(!modal) } >\n          <Container> \n            <ModalHeader toggle={ () => setModal(!modal) }>Delete</ModalHeader>\n          \n            <p><span>Name</span>: { username }</p>\n            <p><span>Meter number</span>: { meterNumber }</p>\n            <p><span>Email</span>: { email }</p>\n            <p><span>Phone number</span>: { phoneNumber }</p>\n            <p><span>Amount</span>: { amount }</p>\n            <p><span>Number of units</span>: { amount/pricePerUnit }</p>\n            <PaystackButton {...componentProps} className=\"btn btn-primary btn-block mb-2\" />\n          </Container>\n        </Modal>\n\n        <Modal isOpen={ creditModal } toggle={ () => setModal(!creditModal) } >\n        <Container> \n          <ModalHeader toggle={ () => setCreditModal(!creditModal) }>Please wait while we credit your meter</ModalHeader>\n        \n          <div className=\"d-flex justify-content-center mb-2\"><ClipLoader size=\"40\" color=\"#000\" loading={ true } /></div>\n        </Container>\n      </Modal>\n\n\n        <form onSubmit={(e) => initiatePayment(e)}>\n        <div className=\"form-group\">\n          <input className=\"form-control\" type=\"text\" placeholder=\"Name\" value={name} onChange={ e => setName(e.target.value) } /> \n        </div>\n        <div className=\"form-group\">\n          <input className=\"form-control\" type=\"text\" placeholder=\"Meter number\" value={meterNumber} onChange={ e => setMeterNumber(e.target.value) } />\n        </div>\n        <div className=\"form-group\">\n          <input className=\"form-control\" type=\"email\" placeholder=\"Email\" value={email} onChange={ e => setEmail(e.target.value) } /> \n        </div>\n        <div className=\"form-group\">\n          <input className=\"form-control\" type=\"text\" placeholder=\"Phone number\" value={phoneNumber} onChange={ e => setPhoneNumber(e.target.value) } /> \n        </div>\n        <div className=\"form-group\">\n          <input className=\"form-control\" type=\"text\" placeholder=\"Amount\" value={amount} onChange={ e => setAmount(e.target.value) } /> \n        </div>\n          <button className=\"btn btn-primary btn-block\" type=\"submit\">Submit</button>\n        </form>\n      </section>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}